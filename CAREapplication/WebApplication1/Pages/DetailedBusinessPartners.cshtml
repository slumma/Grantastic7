@page
@model CAREapplication.Pages.DetailedBusinessPartnersModel
@{



}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>TechCorp Partnership Detail</title>
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link href="styles.css" rel="stylesheet" />
    <link href="/css/partner.details.custom.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-HMHPMtPev+wPpczN/EGIL3g8uLwJ4lDbWZk6yWiJke06GlG+IM4GBoH4Hq6wlVwhMJKzRc5K6Ygc+ZmEdwyqZQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />

</head>

<body>

    <!-- Main Page Content -->
    <div class="container-fluid py-5 main-bg">
        <div class="container main-container">
            <div class="scrollable-container">
                <div class="d-flex justify-content-start mb-3">
                    <a class="btn back-btn px-0 fw-bold" asp-page="BusinessPartners">&lt; PREVIOUS</a>
                </div>
                <h2 class="text-center mb-4">@Model.funder.FunderName</h2>
                <!-- Partnership Overview Section -->
                <h6 class="section-label">PARTNERSHIP OVERVIEW</h6>
                <div class="row gx-4 mb-4">

                    <!-- Left Box: Partnership Info + Contact -->
                    <div class="col-md-8">
                        <div class="gray-box d-flex flex-row justify-content-between align-items-start p-4" style="gap: 2rem;">

                            <!-- Left Column: Org Info -->
                            <div class="d-flex flex-column justify-content-start" style="gap: 1rem;">
                                <p><strong>Organization Type:</strong> @Model.funder.OrgType</p>
                                <p><strong>Funder Status:</strong> @Model.funder.FunderStatus</p>
                            </div>

                            <!-- Right Column: Contact Info -->
                            <div class="d-flex flex-column align-items-center text-center">
                                <img src="/images/user.png" alt="Primary Contact" class="rounded-circle mb-2" style="width: 120px; height: 120px; object-fit: cover;" />
                                <p class="fw-bold mb-1 fs-5">@Model.funder.FirstName @Model.funder.LastName</p>
                                <p class="mb-1"><strong>Phone:</strong> @Model.funder.Phone</p>
                                <p class="mb-1"><strong>Email:</strong> @Model.funder.Email</p>
                                <p class="mb-1"><strong>Address:</strong> @Model.funder.BusinessAddress</p>
                            </div>
                        </div>
                        <div class="text-center mt-2">
                            <button class="btn sm-btn mt-2" onclick="openOverviewModal()">Edit Overview</button>
                        </div>
                    </div>

                    <!-- Right Box: Status Tracking -->
                    <div class="col-md-4 pe-md-4">
                        
                        
                        @{
                            var statusMap = new Dictionary<string, int>
                        {
                        { "Prospect", 10 },
                        { "Initial Contact", 25 },
                        { "Negotiation", 40 },
                        { "MOU", 55 },
                        { "MOU Signed", 70 },
                        { "Active", 85 },
                        { "Completed", 100 },
                        { "On Hold", 50 }
                        };

                            int statusPercent = statusMap.ContainsKey(Model.funder.CommunicationStatus)
                            ? statusMap[Model.funder.CommunicationStatus]
                            : 0;

                            int dashOffset = 314 - (statusPercent * 314 / 100);
                        }
                        

                        <div class="gray-box text-center p-4" style="min-height: 280px;">
                            <h4 class="pt-4 fw-bold">Status Tracking:</h4>
                            <div class="status-meter my-3 position-relative" style="width: 160px; height: 160px; margin: 0 auto;">
                                <svg width="160" height="160" viewBox="0 0 120 120">
                                    <circle cx="60" cy="60" r="50" stroke="#E6E6E6" stroke-width="17" fill="none" />
                                    <circle id="statusArc" cx="60" cy="60" r="50"
                                            stroke="#450084"
                                            stroke-width="17"
                                            fill="none"
                                            stroke-dasharray="314"
                                            stroke-dashoffset="@dashOffset"
                                            stroke-linecap="round"
                                            transform="rotate(-90 60 60)" />
                                </svg>

                                <div class="position-absolute top-50 start-50 translate-middle" style="z-index: 5;">
                                    @if (Model.funder.CommunicationStatus == "Completed" || Model.funder.CommunicationStatus == "Active")
                                    {
                                        <i class="fa-solid fa-check-circle text-success" style="font-size: 2.5rem;"></i>
                                    }
                                    else if (Model.funder.CommunicationStatus == "On Hold")
                                    {
                                        <i class="fa-solid fa-pause-circle text-warning" style="font-size: 2.5rem;"></i>
                                    }
                                </div>
                            </div>


                            <p><strong>Communication Status:</strong> <span class="text-purple">@Model.funder.CommunicationStatus</span></p>
                        </div>



                        <!-- Centered Edit Progress Button -->
                        <div class="text-center mt-2">
                            <button class="btn sm-btn mt-2" onclick="openProgressModal()">Edit Progress</buton>
                        </div>
                    </div>
                </div>

                <!-- Notes Section -->
                <h6 class="section-label mt-5">NOTES:</h6>
                <div class="notes-wrapper d-flex flex-wrap gap-4">

                    <!-- Note Card -->
                    
                    <div class="note-card">
                        <div class="note-header d-flex flex-column text-center">
                            <h6 class="fw-bold mb-1 text-purple">4/08/25 - Note</h6>
                            <p class="mb-2"><strong>Note Author: </strong>@Model.note.FirstName @Model.note.LastName</p>
                        </div>
                        <div class="note-outer">
                            <div class="note-inner">
                                <p><strong>Subject:</strong> Kickoff Meeting Recap</p>
                                <p class="text-muted">We held the project kickoff meeting with TechCorp on 4/03. Discussed initial deliverables, defined roles, and agreed on bi-weekly check-ins. Action item: finalize data sharing agreement by next Friday.</p>
                            </div>
                        </div>
                    </div>

                    <!-- Note 2 -->
                    <div class="note-card">
                        <div class="note-header d-flex flex-column text-center">
                            <h6 class="fw-bold mb-1 text-purple">4/06/25 - Note</h6>
                            <p class="mb-2"><strong>Note Author:</strong> Lexi Miller</p>
                        </div>
                        <div class="note-outer">
                            <div class="note-inner">
                                <p><strong>Subject:</strong> Grant Budget Revision</p>
                                <p class="text-muted">The Tree Fund grant proposal was updated to reflect adjusted staffing costs. Reallocated $10,000 from outreach to technology support. Final version submitted to finance for approval.</p>
                            </div>
                        </div>
                    </div>

                    <!-- Note 3 -->
                    <div class="note-card">
                        <div class="note-header d-flex flex-column text-center">
                            <h6 class="fw-bold mb-1 text-purple">3/27/25 - Note</h6>
                            <p class="mb-2"><strong>Note Author:</strong> Nick Clement</p>
                        </div>
                        <div class="note-outer">
                            <div class="note-inner">
                                <p><strong>Subject:</strong> Status Change- Prospect to Negotiation</p>
                                <p class="text-muted">Partnership with TechCorp has officially moved into the “Negotiation” phase. Alysun is now listed as the primary contact. Please update all records and documents to reflect this change.</p>
                            </div>
                        </div>
                    </div>
                    -->


                    <!-- Additional Notes Add here -->

                </div> <!-- End scrollable-container -->
            </div> <!-- End main-container -->
        </div> <!-- End main-bg -->
    </div>
    <!-- Scripts -->
    <script>
            function slideNotes(direction) {
              const slider = document.getElementById("notesSlider");
              const cards = slider.querySelectorAll(".note-card");
              const visibleCount = 3;
              const cardWidth = cards[0]?.offsetWidth + 32 || 0;
              const totalSlides = Math.ceil(cards.length / visibleCount);
              let currentTransform = getTranslateX(slider);
              let newTransform = currentTransform + direction * -cardWidth * visibleCount;
              const maxScroll = slider.scrollWidth - (cardWidth * visibleCount);
              newTransform = Math.max(Math.min(newTransform, 0), -maxScroll);
              slider.style.transform = `translateX(${newTransform}px)`;
            }
            function getTranslateX(el) {
              const style = window.getComputedStyle(el);
              const matrix = new WebKitCSSMatrix(style.transform);
              return matrix.m41;
            }
            function openNoteModal() {
              alert("Note Modal Open - Implement functionality if needed.");
            }
            function updateStatusProgress(percent) {
              const arc = document.getElementById("statusArc");
              const circumference = 314;
              const offset = circumference - (percent / 100) * circumference;
              arc.style.strokeDashoffset = offset;
            }

            function openNoteModal() {
          document.getElementById("noteModal").classList.remove("d-none");
        }

        function closeNoteModal() {
          document.getElementById("noteModal").classList.add("d-none");
        }

        function saveNote() {
          const date = document.getElementById("noteDate").value;
          const author = document.getElementById("noteAuthor").value;
          const subject = document.getElementById("noteSubject").value;
          const content = document.getElementById("noteContent").value;

          if (!date || !author || !subject || !content) {
            alert("Please fill out all fields.");
            return;
          }

          const newNoteHTML = `
            <div class="note-card">
              <div class="note-header text-center">
                <h6 class="fw-bold mb-1 text-purple">${date} - Note</h6>
                <p><strong>Note Author:</strong> ${author}</p>
              </div>
              <div class="note-outer">
                <div class="note-inner">
                  <p><strong>Subject:</strong> ${subject}</p>
                  <p class="text-muted">${content}</p>
                </div>
              </div>
            </div>
          `;

          const slider = document.getElementById("notesSlider");
          slider.insertAdjacentHTML("beforeend", newNoteHTML);
          closeNoteModal();
        }

        function openOverviewModal() {
          document.getElementById("overviewModal").classList.remove("d-none");
        }

        function closeOverviewModal() {
          document.getElementById("overviewModal").classList.add("d-none");
        }

        function saveOverview() {
          const details = document.getElementById("editDetails").value;
          const sector = document.getElementById("editSector").value;
          const affiliation = document.getElementById("editAffiliation").value;
          const type = document.getElementById("editType").value;

          // You can update the DOM here if you want real-time content updates

          closeOverviewModal();
        }

        function openProgressModal() {
          console.log("Opening progress modal...");
          document.getElementById("progressModal").classList.remove("d-none");
        }

        function closeProgressModal() {
          document.getElementById("progressModal").classList.add("d-none");
        }

        function saveProgress() {
          const selectedStatus = document.getElementById("statusSelect").value;
          const statusDisplay = document.querySelector(".text-purple");
          if (statusDisplay) {
            statusDisplay.textContent = selectedStatus;
          }

          // Optional: Update progress meter visually based on status
          const statusMap = {
            "Prospect": 10,
            "Initial Contact": 25,
            "Negotiation": 40,
            "MOU": 55,
            "MOU Signed": 70,
            "Active": 85,
            "Completed": 100,
            "On Hold": 50
          };

          const percent = statusMap[selectedStatus] || 0;
          updateStatusProgress(percent);

          closeProgressModal();
        }

    </script>
    <!-- Note Modal -->
    <div id="noteModal" class="position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-50 d-none align-items-center justify-content-center" style="z-index: 9999;">
        <div class="custom-modal bg-white p-4 rounded shadow" style="max-width: 500px; width: 100%;">
            <h5 class="mb-3 text-center">Add New Note</h5>
            <div class="mb-2">
                <label class="form-label">Date:</label>
                <input type="text" class="form-control" id="noteDate" placeholder="e.g., 4/09/25" />
            </div>
            <div class="mb-2">
                <label class="form-label">Note Author:</label>
                <input type="text" class="form-control" id="noteAuthor" />
            </div>
            <div class="mb-2">
                <label class="form-label">Subject:</label>
                <input type="text" class="form-control" id="noteSubject" />
            </div>
            <div class="mb-3">
                <label class="form-label">Note Content:</label>
                <textarea class="form-control" id="noteContent" rows="4"></textarea>
            </div>
            <div class="text-end">
                <button class="btn btn-cancel me-2" onclick="closeNoteModal()">Cancel</button>
                <button class="save-btn" onclick="saveNote()">Save Note</button>
            </div>
        </div>
    </div>

    <!-- Edit Overview Modal -->
    <div id="overviewModal" class="position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-50 d-none align-items-center justify-content-center" style="z-index: 9999;">
        <div class="custom-modal bg-white p-4 rounded shadow" style="max-width: 600px; width: 100%;">
            <h5 class="mb-3 text-center">Edit Partnership Overview</h5>

            <div class="mb-2">
                <label class="form-label">Partnership Details:</label>
                <input type="text" class="form-control" id="editDetails" placeholder="e.g., Community education initiative" />
            </div>

            <div class="mb-2">
                <label class="form-label">Sector:</label>
                <input type="text" class="form-control" id="editSector" />
            </div>

            <div class="mb-2">
                <label class="form-label">Affiliation:</label>
                <input type="text" class="form-control" id="editAffiliation" />
            </div>

            <div class="mb-3">
                <label class="form-label">Type:</label>
                <input type="text" class="form-control" id="editType" />
            </div>

            <div class="text-end">
                <button class="btn btn-cancel me-2" onclick="closeOverviewModal()">Cancel</button>
                <button class="save-btn" onclick="saveOverview()">Save</button>
            </div>
        </div>
    </div>
    <!-- Edit Progress Modal -->
    <div id="progressModal" class="position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-50 d-none align-items-center justify-content-center" style="z-index: 9999;">
        <div class="custom-modal bg-white p-4 rounded shadow" style="max-width: 400px; width: 100%;">
            <h5 class="mb-3 text-center">Edit Current Status</h5>

            <form method="post" asp-page-handler="UpdateCommStatus">
                <div class="mb-3">
                    <label for="statusSelect" class="form-label">Select Status:</label>
                    <select class="form-select" id="statusSelect" name="CommunicationStatus">
                        <option value="Prospect">Prospect</option>
                        <option value="Initial Contact">Initial Contact</option>
                        <option value="Negotiation">Negotiation</option>
                        <option value="MOU">MOU</option>
                        <option value="MOU Signed">MOU Signed</option>
                        <option value="Active">Active</option>
                        <option value="Completed">Completed</option>
                        <option value="On Hold">On Hold</option>
                    </select>
                </div>

                <!-- Hidden input for funderPOCID -->
                <input type="hidden" name="funderPOCID" value="@Model.funder.funderPOCID" />

                <div class="text-end">
                    <button type="button" class="btn btn-cancel me-2" onclick="closeProgressModal()">Cancel</button>
                    <button type="submit" class="save-btn">Save</button>
                </div>
            </form>

        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function updateStatusProgress(percent) {
          const arc = document.getElementById("statusArc");
          const circumference = 314;
          const offset = circumference - (percent / 100) * circumference;
          arc.style.strokeDashoffset = offset;
        }
    </script>
</body>
</html>

