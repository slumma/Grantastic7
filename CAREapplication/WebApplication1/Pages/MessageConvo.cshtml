@page
@model CAREapplication.Pages.MessageConvoModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Scrolling Nav - Start Bootstrap Template 5.3.3</title>
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- LOAD BOOTSTRAP CSS - DO NOT DELETE -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="styles.css" rel="stylesheet">
    <!-- END LOADING BOOTSTRAP CSS -->
    <!-- Custom styles -->
    <link href="/css/messages.css" rel="stylesheet">
</head>

<body>
    <div class="container-fluid main-container">
        <div class="row g-2">
            <!-- Add a small gap between columns using Bootstrap's grid gap utilities -->
            <div class="col-12 col-md-3 sidebar p-3">
                <!-- Sidebar with 3 columns on medium screens -->
                <h5>RECENT MESSAGES</h5>
                <input type="text" class="form-control mb-3" placeholder="Search">
                <ul class="list-group message-list">
                    @foreach (var username in Model.Usernames)
                    {
                        <li class="list-group-item">
                            <a asp-page="MessageConvo" asp-route-sender="@username.Value">@username.Text</a>
                        </li>
                    }
                </ul>
                <button class="btn btn-primary w-100 mt-3">NEW MESSAGE</button>
            </div>
            <div class="col-12 col-md-7 sidebar p-3">
                <!-- Chat container with 9 columns on medium screens -->
                @if (Model.receivedList.Count > 0)
                {
                    <div class="chat-header d-flex align-items-center">
                        <div class="avatar">
                            @if (!string.IsNullOrEmpty(Model.otherUser.FirstName) && !string.IsNullOrEmpty(Model.otherUser.LastName))
                            {
                                @Model.otherUser.FirstName.Substring(0, 1)

                                @Model.otherUser.LastName.Substring(0, 1)
                            }
                            else
                            {
                                <span>NA</span> <!-- Default value if FirstName or LastName is null -->
                            }
                        </div>
                        <h5 class="ms-2">@Model.otherUser.UserName</h5>
                    </div>
                    <br />
                    <div class="chat-box">
                        @foreach (var message in Model.receivedList)
                        {
                            <div class="message @(message.SenderUsername == Model.otherUser.UserName ? "bg-light" : "bg-secondary text-white")">
                                <strong>@message.SenderUsername:</strong> @message.Contents
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="chat-header d-flex align-items-center">
                        <div class="avatar">
                            @if (!string.IsNullOrEmpty(Model.otherUser.FirstName) && !string.IsNullOrEmpty(Model.otherUser.LastName))
                            {
                                @Model.otherUser.FirstName.Substring(0, 1)

                                @Model.otherUser.LastName.Substring(0, 1)
                            }
                            else
                            {
                                <span>NA</span> <!-- Default value if FirstName or LastName is null -->
                            }
                        </div>
                        <h5 class="ms-2">@Model.otherUser.UserName</h5>
                    </div>
                    <br />
                    <div class="chat-box">
                        <p>No messages to display.</p>
                    </div>
                }

                <form method="post">
                    <div class="chat-input d-flex">
                        <input asp-for="MessageContent" type="text" class="form-control" placeholder="Type a message">
                        <button class="btn btn-light mx-2">✎</button>
                        <button class="btn btn-light">+</button>
                    </div>
                    <button asp-page-handler="SendMessage" type="submit" class="btn btn-primary ms-2">Send</button>
                    <span asp-validation-for="MessageContent" class="text-danger"></span>
                </form>
            </div>
        </div>
    </div>
</body>
</html>
